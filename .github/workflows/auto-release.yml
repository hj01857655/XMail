name: 'Auto Release After CI'

on:
  workflow_run:
    workflows: ["CI Build"]
    types:
      - completed
    branches: [main, master]

jobs:
  auto-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check if should auto-release
        id: check
        run: |
          # 检查最新提交消息是否包含自动发布标记
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"
          
          if echo "$COMMIT_MSG" | grep -q "\[auto-release:v[0-9]\+\.[0-9]\+\.[0-9]\+\]"; then
            VERSION=$(echo "$COMMIT_MSG" | grep -o "v[0-9]\+\.[0-9]\+\.[0-9]\+" | head -1)
            echo "should_release=true" >> $GITHUB_OUTPUT
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "🚀 检测到自动发布标记: $VERSION"
          else
            echo "should_release=false" >> $GITHUB_OUTPUT
            echo "ℹ️ 未检测到自动发布标记"
            echo "如需自动发布，请在提交消息中添加 [auto-release:v1.0.1] 格式的标记"
          fi

      - name: Trigger release
        if: steps.check.outputs.should_release == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ steps.check.outputs.version }}';
            const commitSha = context.sha.substring(0, 7);
            
            console.log(`触发自动发布: ${version}`);
            
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'release.yml',
              ref: 'master',
              inputs: {
                version: version,
                release_notes: `## 自动发布 ${version}

🤖 此版本由 CI 成功后自动发布

### 📦 安装包下载
- Windows: \`.msi\` 安装包  
- macOS: \`.dmg\` 安装包 (支持 Intel 和 Apple Silicon)

### 🔗 相关信息
- 基于提交: ${commitSha}
- 构建时间: ${new Date().toISOString()}

如有问题请访问 [Issues](https://github.com/hj01857655/XMail/issues) 页面反馈。`
              }
            });