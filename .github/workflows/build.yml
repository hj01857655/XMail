name: 'Build and Release'

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
            target: 'aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
            target: 'x86_64-apple-darwin'
          - platform: 'windows-latest'
            args: '--bundles msi'
            target: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          cache-on-failure: true
          shared-key: ${{ matrix.platform }}

      # Cache WiX tools to avoid repeated downloads on Windows
      - name: Cache WiX tools (Windows)
        if: matrix.platform == 'windows-latest'
        uses: actions/cache@v4
        with:
          path: C:\\Users\\runneradmin\\AppData\\Local\\tauri\\WixTools314
          key: wix314-windows-cache

      # Install and enable sccache on Windows to speed up Rust compilation
      - name: Install sccache (Windows)
        if: matrix.platform == 'windows-latest'
        shell: powershell
        run: |
          choco install -y sccache
          echo "RUSTC_WRAPPER=sccache" >> $Env:GITHUB_ENV
          echo "SCCACHE_CACHE_SIZE=1G" >> $Env:GITHUB_ENV
          echo "SCCACHE_DIR=$Env:LOCALAPPDATA\\Mozilla\\sccache" >> $Env:GITHUB_ENV

      - name: Install frontend dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Set Rust build optimization
        run: |
          echo "CARGO_INCREMENTAL=0" >> $GITHUB_ENV
          echo "CARGO_NET_RETRY=10" >> $GITHUB_ENV
          echo "RUST_BACKTRACE=1" >> $GITHUB_ENV

      - name: Build and attach to release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_INCREMENTAL: 0
          RUST_BACKTRACE: 1
        with:
          tagName: ${{ github.event.release.tag_name }}
          releaseName: ${{ github.event.release.name }}
          releaseBody: ${{ github.event.release.body }}
          releaseDraft: ${{ github.event.release.draft }}
          prerelease: ${{ github.event.release.prerelease }}
          args: ${{ matrix.args }}

      - name: sccache stats (Windows)
        if: matrix.platform == 'windows-latest'
        shell: powershell
        run: |
          sccache --show-stats || echo "sccache not available"